rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // 기존 규칙들...
    
    // 시간 경매 게임 룸
    match /time_auction_rooms/{roomId} {
      // 룸 읽기: 로그인한 사용자만
      allow read: if request.auth != null;
      
      // 룸 생성: 로그인한 사용자만
      allow create: if request.auth != null 
        && request.auth.uid in resource.data.players[0].userId;
      
      // 룸 업데이트: 참가자만 (플레이어 목록, 준비 상태, 게임 진행)
      allow update: if request.auth != null 
        && (
          // 호스트가 게임 상태 변경
          request.auth.uid == resource.data.hostUserId
          // 또는 참가자가 자신의 상태 변경
          || request.auth.uid in resource.data.players.map(p => p.userId)
        );
      
      // 입찰 서브컬렉션
      match /bids/{bidId} {
        // 입찰 읽기: 같은 룸의 참가자만
        allow read: if request.auth != null 
          && request.auth.uid in get(/databases/$(database)/documents/time_auction_rooms/$(roomId)).data.players.map(p => p.userId);
        
        // 입찰 생성: 본인의 입찰만
        allow create: if request.auth != null 
          && request.auth.uid == request.resource.data.userId
          && request.auth.uid in get(/databases/$(database)/documents/time_auction_rooms/$(roomId)).data.players.map(p => p.userId);
        
        // 입찰 수정/삭제 금지
        allow update, delete: if false;
      }
    }
    
    // 기타 기존 컬렉션들...
    match /{document=**} {
      allow read, write: if request.auth != null;
    }
  }
} 